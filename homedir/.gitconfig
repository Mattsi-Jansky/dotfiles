[user]
  name = Mattsi 
  email = mattsi.jansky@codurance.com
[github]
  # https://github.com/blog/180-local-github-config
  user = Mattsi-Jansky
[color]
# ui = true is a superset of all the more specific color options
#  as documented at http://book.git-scm.com/5_customizing_git.html
# When set to always, always use colors in all git commands which are capable of colored output.
# When false, never. When set to true or auto, use colors only when the output is to the terminal.
# When more specific variables of color.* are set, they always take precedence over this setting.
# Defaults to false.
  ui = auto
  # diff = auto
  # status = auto
  # branch = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[advice]
  statusHints = false

[gui]
  fontdiff = -family Monaco -size 10 -weight normal -slant roman -underline 0 -overstrike 0

[core]
  excludesfile = ~/.gitignore
  quotepath = false
  # line endings
  # force LF during add
  autocrlf = input
  # autocrlf = true # for windows to convert to CRLF on checkout and LF on add
  # warn but allow line ending conversion to proceed
  safecrlf = warn
  # prevent crlf (then you will have to deal with the problem -- dos2unix, etc)
  #safecrlf = true
  editor = vim
	pager = diff-so-fancy | less --tabs=4 -RFX
  #editor = subl -w

[alias]
  # most commonly used
  co = checkout
  d = diff --color-words

  # least used
  br = branch -a
  s = status -s -u
  cl = log --stat -C -2
  c = commit
  dh = diff HEAD
  dc = diff --staged
  dw = diff --word-diff
  dcw = diff --color-words
  dm = !git diff | subl
  dv = !git diff | vim
  who = shortlog -s --
  ph = push
  pl = pull
  diffall = diff HEAD
  logr = log -M
  logr2 = log --stat -M -2
  logit = log --stat -M
  whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
  st = status
  l = log --stat -C
  ll = log --stat -C -3
  lol = log --pretty=oneline --graph --abbrev-commit --all
  blg = log --graph --decorate --all --abbrev-commit --pretty=oneline
  slog = log --graph --simplify-by-decoration --all --abbrev-commit --pretty=oneline
  lgso = log --graph --date=short --pretty=format:'%C(yellow)%h%Creset %cn%x09%cd %s%C(green bold)%d'
  shorten = "!sh -c 'curl -i http://git.io -F url=$1' -"

  fixup = "!sh -c 'git commit -m \"fixup! $(git log -1 --format='\\''%s'\\'' $@)\"' -"
  squash = "!sh -c 'git commit -m \"squash! $(git log -1 --format='\\''%s'\\'' $@)\"' -"
  ccfq = "!sh -c 'git add $1 && git commit -m\"Placeholder\"' -"
  cob = checkout -b
  sno = show --name-only
  logsimple = log --graph --abbrev-commit --pretty=oneline --all --decorate
[apply]
  whitespace = nowarn

[rerere]
  #Enable the recording of resolved conflicts, so that identical hunks can be resolved automatically later on
  enabled = 1

[difftool]
  prompt = false

[diff]
  tool = vimdiff

[mergetool]
  prompt = false
  keepBackup = false

[merge]
  tool = vimdiff
  # Always show a diffstat at the end of a merge
  stat = true
  conflictstyle = diff3

[credential]
    # cache creds (git help credential-cache)
  helper = cache

[filter "tabspace"]
  clean = expand -t 4

[push]
  default = matching
	followTags = true

[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f

[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true
